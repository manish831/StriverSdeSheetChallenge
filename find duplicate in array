#include <bits/stdc++.h>

int findDuplicate(vector<int> &arr, int n){
	// Write your code here.
	// first find XOR of 1 to n
	/*
		To find XOR:
	M1 => use loop from 1 to N

	M2 => Find remainder whien n is diveide by 4:
		If rem is 0 ==> XOR(1 to N) = N
		If rem is 1 ==> XOR(1 to N) = 1
		If rem is 2 ==> XOR(1 to N) = N+1
		If rem is 3 ==> XOR(1 to N) = 0
	*/
	// int rem = n%4;
	// int xor1;
	// if(rem == 0)
	// 	xor1 = n;
	// else if(rem == 1)
	// 	xor1 = 1;
	// else if(rem == 2)
	// 	xor1 = n+1;
	// else
	// 	xor1 = 0;
	
	// int xor2 = 0;
	// for(int i=0; i<n; i++){
	// 	xor2 = arr[i]^xor2;
	// }
	// return xor2^xor1;


	//galat socha bhai
	/*
	long long toBeSum = ((n-1)*(n))/2;
	long long presentSum = 0;
	for(int i=0; i<n; i++){
		presentSum += arr[i];
	}
	return (presentSum-toBeSum);
	*/

	map<int, int>mp;
	for(int i=0; i<n; i++){
		mp[arr[i]]++;

		if(mp[arr[i]] > 1){
			return arr[i];
		}
	}



}

 
